Welcome back. This is part two of this lesson. We're going to continue immediately from the end of part one. So, let's get started. Now, let's talk about the first of the Glacia storage classes, S3 Glacia instant retrieval. If I had to summarize this storage class, it's like S3 standard infrequent access except it offers cheaper storage, more expensive retrieval costs, and longer minimums. Standard IIA is designed for when you need data instantly. but not very often, say once a month. Glacia Instant Retrieval extends this, so data where you still want instant retrieval, but where you might only access it, say once every quarter. In line with this, it has a minimum storage duration charge of 90 days versus the 30 days of standard infrequent access. This class is the next step along the path of access frequency as the access frequency of objects increase, you can move them gradually from standard then to standard infrequent access and then to glacia instant retrieval. The important thing to remember about this specific S3 Glacia class is that you still have instant access to your data. There's no retrieval process required. You can still use it like S3 standard and S3 standard infrequent access. It's just that it costs you more if you need to access the data, but less if you don't. Now, Let's move on to the next type of S3 Glacia storage class. And the next one I want to talk about is S3 Glacia flexible retrieval. And this storage class was formally known as S3 Glacia. The name was changed when the previously discussed instant retrieval class was added to the lineup of storage classes available within S3. So, Glacia flexible retrieval has the same three availability zone architecture. as S3 standard and S3 standard infrequent access. It has the same durability characteristics, so 11 9s. And at the time of creating this lesson, S3 glacia flexible retrieval has a storage cost which is about 16th of the cost of S3 standard. So it's really cost effective. But there are some serious tradeoffs which you have to accept in order to make use of it for the exam. It's these tradeoffs which you need to be fully aware of. Conceptually, I want you to think of objects stored with the Glacia flexible retrieval class as cold objects. They aren't warm. They aren't ready for use. And this will form a good knowledge anchor for the exam. Now, because they're cold, they aren't immediately available. They can't be made public. While you can see these objects within an S3 bucket, they're now just a pointer to that object. To get access to them, you need to perform a retrieval process. That's a specific specific operation, a job which needs to be run to gain access to the objects. Now, you pay for this retrieval process. When you retrieve objects from S3 Glacia flexible retrieval, they're stored in the S3 standard infrequent access storage class on a temporary basis. You access them and then they're removed. You can retrieve them permanently by changing the class back to one of the S3 ones, but this is a different process. Now, retrieval jobs come in three different types. We have expedited which generally results in data being available within 1 to five minutes and this is the most expensive. We've got standard where data is usually accessible in 3 to 5 hours and then a lowcost bulk option where data is available in between 5 and 12 hours. So the faster the job type the more expensive. Now this means that S3 Glacia flexible retrieval has a first bite latency of minutes or hours. And that's really important to know for the exam. So, while it's really cheap, you have to be able to tolerate that you can't make the objects public anymore, either in the bucket or using static website hosting. And two, when you do access the objects, it's not an immediate process. So, you can see the object metadata in the bucket, but the data itself is in chilled storage, and you need to retrieve that data in order to access it. Now, S3 Glacia Flex Fible retrieval has some other limits. So a 40 KB minimum billable size and a 90day minimum billable duration for the exam. Glacia flexible retrieval is for situations where you need to store archival data where frequent or realtime access isn't needed. For example, yearly access and you're okay with minutes to hours for retrieval operations. So it's one of the cheapest forms of storage in S3. as long as you can tolerate the characteristics of the storage class. But it's not the cheapest form of storage. That honor goes to S3 Glacia deep archive. Now S3 Glacia deep archive is much cheaper than the storage class we were just discussing. In exchange for that, there are even more restrictions which you need to be able to tolerate. Conceptually, where S3 Glacia flexible retrieval was data in a chilled state, Glacia archive is data in a frozen state. Objects have minimums, so 40 KB minimum billable size and 180day minimum billable duration. Like Glacia flexible retrieval, objects cannot be made publicly accessible. Accessing the data requires a retrieval job. Just like Glacia flexible retrieval, the jobs temporarily restore to S3 standard infrequent access. But those retrieval jobs take longer. Standard is 12 hours and bulk is up to 48 hours. So this is much longer than Glacia flexible retrieval. And that's the compromise that you agree to. The storage is a lot cheaper in exchange for much longer restore times. Glacia deep archive should be used for data which is archival which rarely if ever needs to be accessed and where hours or days is tolerable for the retrieval process. So it's not really suited to primary system backups because of this restore time. It's more suited for secondary long-term archival backups or data which comes under legal or regulatory requirements in terms of retention length. Now with this being said, there's one final type of storage class which I want to cover and that's intelligent taring. Now intelligent taring is different from all of the other storage classes which I've talked about. It's actually a storage class which contains five different storage tiers. With intelligent tiering, when you move objects into this class, there are a range of ways that an object can be stored. It can be stored within a frequent access tier or an infrequent access tier. Or for objects which are accessed even less frequently, there's an archive instant access, archive access or deep archive set of tiers. You can think of the frequent access tier like S3 standard and the infrequent access access tier like S3 standard infrequent access and the archive tiers are the same price and performance as S3 Glacia instant retrieval and flexible retrieval and the deep archive tier is the same price and performance as Glacia deep archive. Now unlike the other S3 storage classes you don't have to worry about moving objects between tiers with intelligent taring the intelligent taring system does this for you. Let's say that we have an object object, say a picture of whiskers, which is initially kind of popular and then not popular and then it goes super viral. Well, if we stored this object using the intelligent tearing storage class, it would monitor the usage of the object. When the object is in regular use, it would stay within the frequent access tier and would have the same costs as S3 standard. If the object isn't accessed for 30 days, then it would be moved automatically in to the infrequent tier where it would stay while being stored at a lower rate. Now at this stage you can also add configuration. So based on a bucket prefix or object tag any objects which are accessed less frequently can be moved into the three archive tiers. Now there's a 90-day minimum for archive instant access and this is fully automatic. Think of this as a cheaper version of infrequent access for objects which are accessed even less frequently. Crucially, this tier, so archive instant access, still gives you access to the data automatically as and when you need it, just like infrequent access. In addition to this, there are two more entirely optional tiers, archive access and deep archive. And these can be configured so that objects move into them when they haven't been accessed for 90 to 270 days for archive access. or 180 through to 730 days for deep archive. Now, these are entirely optional, and it's worth mentioning that when objects are moved into these tiers, getting them back isn't immediate. There's a retrieval time to bring them back. So, only use these tiers when your application can tolerate asynchronous access patterns. So, archive instant access requires no application or system changes. It's just another tier for less frequently accessed objects. with a lower cost. Archive, access, and deep archive changes things. Your applications must support these tiers because retrieving objects requires specific API calls. Now, if objects do stay in infrequent access or archive instant access, when the objects become super viral and get accessed, these will be moved back to frequent access automatically with no retrieval charges. Intelligent Tearing has a monitor ing an automation cost per 1,000 objects instead of the retrieval cost. So essentially the system manages the movement of data between these tiers automatically without any penalty for this management fee. The cost of the tiers are the same as the base S3 tiers, standard and infrequent access. There's just the management fee on top. So it's more flexible than S3 standard and S3 infrequent access, but it's more expensive because of the management fee. Now, intelligent taring is designed for long lived data where the usage is changing or unknown. If the usage is static, either frequently accessed or infrequently accessed, then you're better using the direct S3 storage class, either standard or infrequent access. Intelligent taring is only good if you have data where the pattern changes or you don't know it. Now, with that being said, that's all of the S3 storage classes which I want to cover. That's at least enough technical information and context which you'll need for the exam and to get started in the real world. So go ahead and complete the video and when you're ready, I look forward to you joining me in the next

